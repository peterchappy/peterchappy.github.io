<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[chapman.codes]]></title><description><![CDATA[my corner of the internet.]]></description><link>https://chapman.codes</link><generator>GatsbyJS</generator><lastBuildDate>Sun, 24 Jan 2021 19:39:01 GMT</lastBuildDate><item><title><![CDATA[About me]]></title><description><![CDATA[Hi, I’m Peter Chapman I’m a Fullstack Software Engineer from Philadelphia. I would consider myself to be a polygot, but my bread and butter…]]></description><link>https://chapman.codes/pages/about/</link><guid isPermaLink="false">https://chapman.codes/pages/about/</guid><content:encoded>&lt;p&gt;Hi, I’m Peter Chapman&lt;/p&gt;
&lt;p&gt;I’m a Fullstack Software Engineer from Philadelphia. I would consider myself to be a polygot, but my bread and butter is Typescript, React, and Functional Programming. Currently I’m working with the awesome team over at QuotaPath doing just that.&lt;/p&gt;
&lt;p&gt;I love being a software engineer. Every day I feel like the kid who grew up wanting to play basketball that actually got drafted into the NBA. I knew that I wanted to be a programmer when at an early age my dad programmed a hack for me to actually beat the original Rouge on our Atari ST.&lt;/p&gt;
&lt;p&gt;While you can expect lots of programming talk on this page you’ll also find sprinkled in pictures of my cat, recipes I’ve crafted, reviews of movies and records, progress shots of Gunpla I’m building, and thoughts on the current state of wrestling around the world.&lt;/p&gt;
&lt;p&gt;That sounds like a lot, and it is, but as I get older I’ve found writing to be a good way to solidify and express my viewpoints. A friend of mine use to joke that I’d probably write a memoir one day. While this is not that, it is me planting a flag on a little piece of the internet, and creating passionate content that I enjoy, and hopefully others do too.&lt;/p&gt;
&lt;p&gt;Disclaimer: Viewpoints expressed on this page are solely mine and not those of my employer.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[In defense of small packages]]></title><description><![CDATA[When I first started web development I use to stick my nose in the air at people that would
just import a ton of packages to tasks that I…]]></description><link>https://chapman.codes/blog/2021-01-24-In-defense-of-small-packages/</link><guid isPermaLink="false">https://chapman.codes/blog/2021-01-24-In-defense-of-small-packages/</guid><pubDate>Sun, 24 Jan 2021 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;When I first started web development I use to stick my nose in the air at people that would
just import a ton of packages to tasks that I deemed easy to write, and thus not worth the import. &lt;/p&gt;
&lt;p&gt;My reasoning were that were two-fold.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It helped to hone your craft. Learning how the soup is made when it came to simple utility functions made you a better programmer.&lt;/li&gt;
&lt;li&gt;Reducing the number of dependencies in turn reduced your bundle size.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I still feel both of these reasons have valid cases, but as time has gone on, and I have less of it, I’ve learned the value of producing meaningful results. How much time have I spent writing the same simple validation logic? Or writing utility functions around boolean state? It may only be 5 minutes here or there, but that time adds up, &lt;/p&gt;
&lt;p&gt;In order to not compromise my ideals while still leveraging the work I’ve done in the past I’ve started building a collection of private npm packages. Any time I reference code from past projects, or copy and paste the same bit multiple times I break it into it’s own package. This allows me to take known working code, add test coverage if needed, and reusue it easily. I’m still solving these problems myself and am able to scope the dependencies to packages I’d already be importing like React or Ramda.&lt;/p&gt;
&lt;p&gt;You won’t see me importing packages like &lt;a href=&quot;https://qz.com/646467/how-one-programmer-broke-the-internet-by-deleting-a-tiny-piece-of-code/&quot;&gt;leftpad&lt;/a&gt; anytime soon, however I’ve come around to the idea using npm like lego blocks to leverage solutions to past problems in order to allow me to to move faster on larger scale problems.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Ship hobby code often]]></title><description><![CDATA[There are often two problems a developer faces when working on side projects. First is that they are too precious of their work. Everything…]]></description><link>https://chapman.codes/blog/2020-04-26-ship-hobby-code-often/</link><guid isPermaLink="false">https://chapman.codes/blog/2020-04-26-ship-hobby-code-often/</guid><pubDate>Sun, 26 Apr 2020 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;There are often two problems a developer faces when working on side projects. First is that they are too precious of their work. Everything needs to be done “right” and thus they usually make very little progress with the limited free time that they have. Secondly more often than not developers have too many ideas that they want to work on. The combination of these two things leads to a Github page filled with half completed projects. I can confidently say that most developers have gone through their Github page and deleted a bunch of repositories that had no actual meaning or purpose other than the reminder of an idea they once had.&lt;/p&gt;
&lt;p&gt;Doing things “right” is a broad term that can manifest in many ways. Maybe your following TDD and trying to get 100% test coverage, using all the hottest new JS frameworks, spending days tweaking styles, or writing your app in the fanciest of FP languages. There is only so much free time in a day and if the primary goal of the project is to do it the “right” way that’s totally valid, but this will greatly decrease the speed of your output.&lt;/p&gt;
&lt;p&gt;Developers by nature find problems in their environment and try to solve them. This tends to lead to a laundry list of project ideas written down in a notebook or saved on a phone. This can tend to analysis paralysis to what project you should be working. If you choose the wrong project, slow frequency of output could lead to an apathy towards your side project which in turn leads to abandonment.&lt;/p&gt;
&lt;p&gt;At this point I want to be clear. There is nothing at all wrong with doing things the “right” way or having a laundry list of ideas. It’s all about management of these two competing sides of your brain. As someone who has for many years suffered with these problems I’ve come to a simple realization. Ship your hobby code often.&lt;/p&gt;
&lt;p&gt;What do I mean by that?&lt;/p&gt;
&lt;p&gt;Break down ideas into increments of small MVPs or vertical slices. Maybe you’re trying to learn a new language and want more than just a todo list to work on. Find something quick you can make a simple clone of like Twitter, HackerNews, or YouTube. If the project a more fleshed out idea and less about learning new tech find shippable features that would bring value on their own. This allows you to figure out not only what technologies you enjoy / are productive working with but also finding which ideas really spark your creativity.&lt;/p&gt;
&lt;p&gt;Take this website for example. At the time of writing this blog post, April 2020, I’m writing this in a json blob because Markdown support isn’t implement, I don’t have a backend CMS, and the idea of learning Gatsby added a big question mark to what I could actually get done. I know I will eventually get to these things however neglecting them has a allowed me to ship a fully functional website in a week. This frees me up to either next week continue on improvements to this site, or build out an MVP for my next idea.&lt;/p&gt;
&lt;p&gt;Shipping your hobby code often is a rewarding feeling. It scratches that instant gratification part of my primate brain in the same way completing a series on Netflix over the course of a weekend does. It has brought back the joy and motivation of hobby programming I’ve felt like I’ve lost in recent years. &lt;/p&gt;</content:encoded></item></channel></rss>